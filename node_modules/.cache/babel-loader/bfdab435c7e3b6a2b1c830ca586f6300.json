{"ast":null,"code":"import React from'react';import'./App.css';import{FaGithub,FaTwitter,FaReact,FaPython}from\"react-icons/fa\";import{Timeline,Follow}from'react-twitter-widgets';import{makeStyles}from'@material-ui/core/styles';import Paper from'@material-ui/core/Paper';import Grid from'@material-ui/core/Grid';import Link from'@material-ui/core/Link';var useStyles=makeStyles(function(theme){return{root:{flexGrow:1},paper:{padding:theme.spacing(2)},icon:{marginLeft:'5px',letterSpacing:'1em'}};});function App(){var classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,xs:8},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"h1\",null,\"Tennis Tweets \"),/*#__PURE__*/React.createElement(\"h2\",{className:classes.icon},/*#__PURE__*/React.createElement(Link,{href:\"https://twitter.com/TennisScores2\",underline:\"none\"},\" \",/*#__PURE__*/React.createElement(FaTwitter,null)),/*#__PURE__*/React.createElement(Link,{href:\"https://github.com/jschriemer/Tennis-Tweets\",underline:\"none\"},\" \",/*#__PURE__*/React.createElement(FaGithub,null)),/*#__PURE__*/React.createElement(Link,{href:\"https://reactjs.org/\",underline:\"none\"},\" \",/*#__PURE__*/React.createElement(FaReact,null)),/*#__PURE__*/React.createElement(Link,{href:\"https://github.com/jschriemer/Tennis-Tweets\",underline:\"none\"},\" \",/*#__PURE__*/React.createElement(FaPython,null))),/*#__PURE__*/React.createElement(\"h2\",null,\" What is it? \"),/*#__PURE__*/React.createElement(\"p\",null,\"Tennis Tweets is a Twitter bot that live tweets ATP & ITF tennis scores. I created this because \",/*#__PURE__*/React.createElement(\"br\",null),\"I am a tennis fan and I wanted to learn more about internet bots and web scraping. \"),/*#__PURE__*/React.createElement(\"h2\",null,\"What was it built with?\"),/*#__PURE__*/React.createElement(\"p\",null,\"Built with Python and JavaScript (React) using libraries Tweepy and BeautifulSoup.\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Total Statistics\"),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(\"h3\",null,\"12\"),/*#__PURE__*/React.createElement(\"p\",null,\"Total Tweets\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(\"h3\",null,\"345\"),/*#__PURE__*/React.createElement(\"p\",null,\"Tweet Impressions\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(\"h3\",null,\"8\"),/*#__PURE__*/React.createElement(\"p\",null,\"Followers\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(\"h3\",null,\"12\"),/*#__PURE__*/React.createElement(\"p\",null,\"Profile Visits\"))))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:4},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(Timeline,{dataSource:{sourceType:'profile',screenName:'tennisscores2'},options:{username:'Tennis_Tweets',height:'550',width:'300'},onLoad:function onLoad(){return console.log('Timeline is loaded!');}})))));}export default App;","map":{"version":3,"sources":["/Users/john/Downloads/tennis-react/react-tennis/src/App.js"],"names":["React","FaGithub","FaTwitter","FaReact","FaPython","Timeline","Follow","makeStyles","Paper","Grid","Link","useStyles","theme","root","flexGrow","paper","padding","spacing","icon","marginLeft","letterSpacing","App","classes","sourceType","screenName","username","height","width","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,OAA9B,CAAwCC,QAAxC,KAAuD,gBAAvD,CACA,OAASC,QAAT,CAAmBC,MAAnB,KAAiC,uBAAjC,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAACK,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,QAAQ,CAAE,CADN,CADiC,CAIvCC,KAAK,CAAE,CACLC,OAAO,CAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ,CAJgC,CAOvCC,IAAI,CAAE,CACJC,UAAU,CAAE,KADR,CAEJC,aAAa,CAAE,KAFX,CAPiC,CAAZ,EAAD,CAA5B,CAaA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CAEA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACE,oBAAC,KAAD,EAAO,SAAS,CAAEW,OAAO,CAACP,KAA1B,eACA,+CADA,cAEA,0BAAI,SAAS,CAAIO,OAAO,CAACJ,IAAzB,eACA,oBAAC,IAAD,EAAM,IAAI,CAAC,mCAAX,CAA+C,SAAS,CAAG,MAA3D,mBAAmE,oBAAC,SAAD,MAAnE,CADA,cAEE,oBAAC,IAAD,EAAM,IAAI,CAAC,6CAAX,CAAyD,SAAS,CAAG,MAArE,mBAA6E,oBAAC,QAAD,MAA7E,CAFF,cAGE,oBAAC,IAAD,EAAM,IAAI,CAAC,sBAAX,CAAkC,SAAS,CAAG,MAA9C,mBAAuD,oBAAC,OAAD,MAAvD,CAHF,cAIE,oBAAC,IAAD,EAAM,IAAI,CAAC,6CAAX,CAAyD,SAAS,CAAG,MAArE,mBAA6E,oBAAC,QAAD,MAA7E,CAJF,CAFA,cAOA,8CAPA,cAQA,6IACyB,8BADzB,uFARA,cAUA,wDAVA,cAWA,kHAXA,cAYA,iDAZA,cAaA,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACE,mCADF,cAEE,4CAFF,CADF,cAKE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACE,oCADF,cAEE,iDAFF,CALF,cASE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACE,kCADF,cAEE,yCAFF,CATF,cAaE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACE,mCADF,cAEE,8CAFF,CAbF,CAbA,CADF,CADF,cAmCA,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACA,oBAAC,KAAD,EAAO,SAAS,CAAEI,OAAO,CAACP,KAA1B,eACE,oBAAC,QAAD,EACE,UAAU,CAAE,CACVQ,UAAU,CAAE,SADF,CAEVC,UAAU,CAAE,eAFF,CADd,CAKE,OAAO,CAAE,CACPC,QAAQ,CAAE,eADH,CAEPC,MAAM,CAAE,KAFD,CAGPC,KAAK,CAAE,KAHA,CALX,CAUE,MAAM,CAAE,wBAAMC,CAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAN,EAVV,EADF,CADA,CAnCA,CADF,CADF,CAwDD,CAED,cAAeR,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { FaGithub, FaTwitter, FaReact , FaPython} from \"react-icons/fa\";\nimport { Timeline, Follow } from 'react-twitter-widgets'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  icon: {\n    marginLeft: '5px',\n    letterSpacing: '1em',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={3}>\n        <Grid item xs={8}>\n          <Paper className={classes.paper}>\n          <h1>Tennis Tweets </h1> \n          <h2 className = {classes.icon}>\n          <Link href=\"https://twitter.com/TennisScores2\" underline = \"none\"> <FaTwitter /></Link>\n            <Link href=\"https://github.com/jschriemer/Tennis-Tweets\" underline = \"none\"> <FaGithub /></Link> \n            <Link href=\"https://reactjs.org/\" underline = \"none\" > <FaReact /></Link>\n            <Link href=\"https://github.com/jschriemer/Tennis-Tweets\" underline = \"none\"> <FaPython /></Link></h2>\n          <h2> What is it? </h2>\n          <p>Tennis Tweets is a Twitter bot that live tweets ATP & ITF tennis scores.\n            I created this because <br></br>I am a tennis fan and I wanted to learn more about internet bots and web scraping. </p>\n          <h2>What was it built with?</h2>\n          <p>Built with Python and JavaScript (React) using libraries Tweepy and BeautifulSoup.</p>\n          <h2>Total Statistics</h2>\n          <Grid container spacing={2}>\n            <Grid item xs={3}>\n              <h3>12</h3>\n              <p>Total Tweets</p>\n            </Grid>\n            <Grid item xs={3}>\n              <h3>345</h3>\n              <p>Tweet Impressions</p>\n            </Grid>\n            <Grid item xs={3}>\n              <h3>8</h3>\n              <p>Followers</p>\n            </Grid>\n            <Grid item xs={3}>\n              <h3>12</h3>\n              <p>Profile Visits</p>\n            </Grid>\n          </Grid>\n          </Paper>\n        </Grid>\n      <Grid item xs={4}>\n      <Paper className={classes.paper}>\n        <Timeline\n          dataSource={{\n            sourceType: 'profile',\n            screenName: 'tennisscores2'\n          }}\n          options={{\n            username: 'Tennis_Tweets',\n            height: '550',\n            width: '300'\n          }}\n          onLoad={() => console.log('Timeline is loaded!')}\n          />\n        </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}