{"ast":null,"code":"'use strict';\n/**\n * Module dependencies\n */\n\nvar url = require('url');\n\nvar Streamparser = require('./parser');\n\nvar request = require('request');\n\nvar extend = require('deep-extend'); // Package version\n\n\nvar VERSION = require('../package.json').version;\n\nfunction Twitter(options) {\n  if (!(this instanceof Twitter)) {\n    return new Twitter(options);\n  }\n\n  this.VERSION = VERSION; // Merge the default options with the client submitted options\n\n  this.options = extend({\n    consumer_key: null,\n    consumer_secret: null,\n    access_token_key: null,\n    access_token_secret: null,\n    bearer_token: null,\n    rest_base: 'https://api.twitter.com/1.1',\n    stream_base: 'https://stream.twitter.com/1.1',\n    user_stream_base: 'https://userstream.twitter.com/1.1',\n    site_stream_base: 'https://sitestream.twitter.com/1.1',\n    media_base: 'https://upload.twitter.com/1.1',\n    request_options: {\n      headers: {\n        Accept: '*/*',\n        Connection: 'close',\n        'User-Agent': 'node-twitter/' + VERSION\n      }\n    }\n  }, options); // Default to user authentication\n\n  var authentication_options = {\n    oauth: {\n      consumer_key: this.options.consumer_key,\n      consumer_secret: this.options.consumer_secret,\n      token: this.options.access_token_key,\n      token_secret: this.options.access_token_secret\n    }\n  }; // Check to see if we are going to use User Authentication or Application Authetication\n\n  if (this.options.bearer_token) {\n    authentication_options = {\n      headers: {\n        Authorization: 'Bearer ' + this.options.bearer_token\n      }\n    };\n  } // Configure default request options\n\n\n  this.request = request.defaults(extend(this.options.request_options, authentication_options)); // Check if Promise present\n\n  this.allow_promise = typeof Promise === 'function';\n}\n\nTwitter.prototype.__buildEndpoint = function (path, base) {\n  var bases = {\n    'rest': this.options.rest_base,\n    'stream': this.options.stream_base,\n    'user_stream': this.options.user_stream_base,\n    'site_stream': this.options.site_stream_base,\n    'media': this.options.media_base\n  };\n  var endpoint = bases.hasOwnProperty(base) ? bases[base] : bases.rest; // if full url is specified we use that\n\n  var isFullUrl = url.parse(path).protocol !== null;\n\n  if (isFullUrl) {\n    endpoint = path;\n  } else {\n    // If the path begins with media or /media\n    if (path.match(/^(\\/)?media/)) {\n      endpoint = bases.media;\n    }\n\n    endpoint += path.charAt(0) === '/' ? path : '/' + path;\n  } // Remove trailing slash\n\n\n  endpoint = endpoint.replace(/\\/$/, '');\n\n  if (!isFullUrl) {\n    // Add json extension if not provided in call... only if a full url is not specified\n    endpoint += path.split('.').pop() !== 'json' ? '.json' : '';\n  }\n\n  return endpoint;\n};\n\nTwitter.prototype.__request = function (method, path, params, callback) {\n  var base = 'rest',\n      promise = false; // Set the callback if no params are passed\n\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  } // Return promise if no callback is passed and promises available\n  else if (callback === undefined && this.allow_promise) {\n      promise = true;\n    } // Set API base\n\n\n  if (typeof params.base !== 'undefined') {\n    base = params.base;\n    delete params.base;\n  } // Build the options to pass to our custom request object\n\n\n  var options = {\n    method: method.toLowerCase(),\n    // Request method - get || post\n    url: this.__buildEndpoint(path, base) // Generate url\n\n  }; // Pass url parameters if get\n\n  if (method === 'get') {\n    options.qs = params;\n  } // Pass form data if post\n\n\n  if (method === 'post') {\n    var formKey = 'form';\n\n    if (typeof params.media !== 'undefined') {\n      formKey = 'formData';\n    }\n\n    options[formKey] = params;\n  } // Promisified version\n\n\n  if (promise) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.request(options, function (error, response, data) {\n        // request error\n        if (error) {\n          return reject(error);\n        } // JSON parse error or empty strings\n\n\n        try {\n          // An empty string is a valid response\n          if (data === '') {\n            data = {};\n          } else {\n            data = JSON.parse(data);\n          }\n        } catch (parseError) {\n          return reject(new Error('JSON parseError with HTTP Status: ' + response.statusCode + ' ' + response.statusMessage));\n        } // response object errors\n        // This should return an error object not an array of errors\n\n\n        if (data.errors !== undefined) {\n          return reject(data.errors);\n        } // status code errors\n\n\n        if (response.statusCode < 200 || response.statusCode > 299) {\n          return reject(new Error('HTTP Error: ' + response.statusCode + ' ' + response.statusMessage));\n        } // no errors\n\n\n        resolve(data);\n      });\n    });\n  } // Callback version\n\n\n  this.request(options, function (error, response, data) {\n    // request error\n    if (error) {\n      return callback(error, data, response);\n    } // JSON parse error or empty strings\n\n\n    try {\n      // An empty string is a valid response\n      if (data === '') {\n        data = {};\n      } else {\n        data = JSON.parse(data);\n      }\n    } catch (parseError) {\n      return callback(new Error('JSON parseError with HTTP Status: ' + response.statusCode + ' ' + response.statusMessage), data, response);\n    } // response object errors\n    // This should return an error object not an array of errors\n\n\n    if (data.errors !== undefined) {\n      return callback(data.errors, data, response);\n    } // status code errors\n\n\n    if (response.statusCode < 200 || response.statusCode > 299) {\n      return callback(new Error('HTTP Error: ' + response.statusCode + ' ' + response.statusMessage), data, response);\n    } // no errors\n\n\n    callback(null, data, response);\n  });\n};\n/**\n * GET\n */\n\n\nTwitter.prototype.get = function (url, params, callback) {\n  return this.__request('get', url, params, callback);\n};\n/**\n * POST\n */\n\n\nTwitter.prototype.post = function (url, params, callback) {\n  return this.__request('post', url, params, callback);\n};\n/**\n * STREAM\n */\n\n\nTwitter.prototype.stream = function (method, params, callback) {\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n\n  var base = 'stream';\n\n  if (method === 'user' || method === 'site') {\n    base = method + '_' + base;\n  }\n\n  var url = this.__buildEndpoint(method, base);\n\n  var request = this.request({\n    url: url,\n    qs: params\n  });\n  var stream = new Streamparser();\n\n  stream.destroy = function () {\n    // FIXME: should we emit end/close on explicit destroy?\n    if (typeof request.abort === 'function') {\n      request.abort(); // node v0.4.0\n    } else {\n      request.socket.destroy();\n    }\n  };\n\n  request.on('response', function (response) {\n    if (response.statusCode !== 200) {\n      stream.emit('error', new Error('Status Code: ' + response.statusCode));\n    } else {\n      stream.emit('response', response);\n    }\n\n    response.on('data', function (chunk) {\n      stream.receive(chunk);\n    });\n    response.on('error', function (error) {\n      stream.emit('error', error);\n    });\n    response.on('end', function () {\n      stream.emit('end', response);\n    });\n  });\n  request.on('error', function (error) {\n    stream.emit('error', error);\n  });\n  request.end();\n\n  if (typeof callback === 'function') {\n    callback(stream);\n  } else {\n    return stream;\n  }\n};\n\nmodule.exports = Twitter;","map":{"version":3,"sources":["/Users/john/Downloads/tennis-react/react-tennis/node_modules/twitter/lib/twitter.js"],"names":["url","require","Streamparser","request","extend","VERSION","version","Twitter","options","consumer_key","consumer_secret","access_token_key","access_token_secret","bearer_token","rest_base","stream_base","user_stream_base","site_stream_base","media_base","request_options","headers","Accept","Connection","authentication_options","oauth","token","token_secret","Authorization","defaults","allow_promise","Promise","prototype","__buildEndpoint","path","base","bases","endpoint","hasOwnProperty","rest","isFullUrl","parse","protocol","match","media","charAt","replace","split","pop","__request","method","params","callback","promise","undefined","toLowerCase","qs","formKey","_this","resolve","reject","error","response","data","JSON","parseError","Error","statusCode","statusMessage","errors","get","post","stream","destroy","abort","socket","on","emit","chunk","receive","end","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Module dependencies\n */\n\nvar url = require('url');\nvar Streamparser = require('./parser');\nvar request = require('request');\nvar extend = require('deep-extend');\n\n// Package version\nvar VERSION = require('../package.json').version;\n\nfunction Twitter(options) {\n  if (!(this instanceof Twitter)) { return new Twitter(options) }\n\n  this.VERSION = VERSION;\n\n  // Merge the default options with the client submitted options\n  this.options = extend({\n    consumer_key: null,\n    consumer_secret: null,\n    access_token_key: null,\n    access_token_secret: null,\n    bearer_token: null,\n    rest_base: 'https://api.twitter.com/1.1',\n    stream_base: 'https://stream.twitter.com/1.1',\n    user_stream_base: 'https://userstream.twitter.com/1.1',\n    site_stream_base: 'https://sitestream.twitter.com/1.1',\n    media_base: 'https://upload.twitter.com/1.1',\n    request_options: {\n      headers: {\n        Accept: '*/*',\n        Connection: 'close',\n        'User-Agent': 'node-twitter/' + VERSION\n      }\n    }\n  }, options);\n\n  // Default to user authentication\n  var authentication_options = {\n    oauth: {\n      consumer_key: this.options.consumer_key,\n      consumer_secret: this.options.consumer_secret,\n      token: this.options.access_token_key,\n      token_secret: this.options.access_token_secret\n    }\n  };\n\n  // Check to see if we are going to use User Authentication or Application Authetication\n  if (this.options.bearer_token) {\n    authentication_options = {\n      headers: {\n        Authorization: 'Bearer ' + this.options.bearer_token\n      }\n    };\n  }\n\n  // Configure default request options\n  this.request = request.defaults(\n    extend(\n      this.options.request_options,\n      authentication_options\n    )\n  );\n\n  // Check if Promise present\n  this.allow_promise = (typeof Promise === 'function');\n}\n\nTwitter.prototype.__buildEndpoint = function(path, base) {\n  var bases = {\n    'rest': this.options.rest_base,\n    'stream': this.options.stream_base,\n    'user_stream': this.options.user_stream_base,\n    'site_stream': this.options.site_stream_base,\n    'media': this.options.media_base\n  };\n  var endpoint = (bases.hasOwnProperty(base)) ? bases[base] : bases.rest;\n  // if full url is specified we use that\n  var isFullUrl = (url.parse(path).protocol !== null);\n  if (isFullUrl) {\n    endpoint = path;\n  }\n  else {\n    // If the path begins with media or /media\n    if (path.match(/^(\\/)?media/)) {\n      endpoint = bases.media;\n    }\n    endpoint += (path.charAt(0) === '/') ? path : '/' + path;\n  }\n\n  // Remove trailing slash\n  endpoint = endpoint.replace(/\\/$/, '');\n\n  if(!isFullUrl) {\n    // Add json extension if not provided in call... only if a full url is not specified\n    endpoint += (path.split('.').pop() !== 'json') ? '.json' : '';\n  }\n\n  return endpoint;\n};\n\nTwitter.prototype.__request = function(method, path, params, callback) {\n  var base = 'rest', promise = false;\n\n  // Set the callback if no params are passed\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n  // Return promise if no callback is passed and promises available\n  else if (callback === undefined && this.allow_promise) {\n    promise = true;\n  }\n\n  // Set API base\n  if (typeof params.base !== 'undefined') {\n    base = params.base;\n    delete params.base;\n  }\n\n  // Build the options to pass to our custom request object\n  var options = {\n    method: method.toLowerCase(),  // Request method - get || post\n    url: this.__buildEndpoint(path, base) // Generate url\n  };\n\n  // Pass url parameters if get\n  if (method === 'get') {\n    options.qs = params;\n  }\n\n  // Pass form data if post\n  if (method === 'post') {\n    var formKey = 'form';\n\n    if (typeof params.media !== 'undefined') {\n      formKey = 'formData';\n    }\n    options[formKey] = params;\n  }\n\n  // Promisified version\n  if (promise) {\n    var _this = this;\n    return new Promise(function(resolve, reject) {\n      _this.request(options, function(error, response, data) {\n        // request error\n        if (error) {\n          return reject(error);\n        }\n\n        // JSON parse error or empty strings\n        try {\n          // An empty string is a valid response\n          if (data === '') {\n            data = {};\n          }\n          else {\n            data = JSON.parse(data);\n          }\n        }\n        catch(parseError) {\n          return reject(new Error('JSON parseError with HTTP Status: ' + response.statusCode + ' ' + response.statusMessage));\n        }\n\n        // response object errors\n        // This should return an error object not an array of errors\n        if (data.errors !== undefined) {\n          return reject(data.errors);\n        }\n\n        // status code errors\n        if(response.statusCode < 200 || response.statusCode > 299) {\n          return reject(new Error('HTTP Error: ' + response.statusCode + ' ' + response.statusMessage));\n        }\n\n        // no errors\n        resolve(data);\n      });\n    });\n  }\n\n  // Callback version\n  this.request(options, function(error, response, data) {\n    // request error\n    if (error) {\n      return callback(error, data, response);\n    }\n\n    // JSON parse error or empty strings\n    try {\n      // An empty string is a valid response\n      if (data === '') {\n        data = {};\n      }\n      else {\n        data = JSON.parse(data);\n      }\n    }\n    catch(parseError) {\n      return callback(\n        new Error('JSON parseError with HTTP Status: ' + response.statusCode + ' ' + response.statusMessage),\n        data,\n        response\n      );\n    }\n\n\n    // response object errors\n    // This should return an error object not an array of errors\n    if (data.errors !== undefined) {\n      return callback(data.errors, data, response);\n    }\n\n    // status code errors\n    if(response.statusCode < 200 || response.statusCode > 299) {\n      return callback(\n        new Error('HTTP Error: ' + response.statusCode + ' ' + response.statusMessage),\n        data,\n        response\n      );\n    }\n    // no errors\n    callback(null, data, response);\n  });\n\n};\n\n/**\n * GET\n */\nTwitter.prototype.get = function(url, params, callback) {\n  return this.__request('get', url, params, callback);\n};\n\n/**\n * POST\n */\nTwitter.prototype.post = function(url, params, callback) {\n  return this.__request('post', url, params, callback);\n};\n\n/**\n * STREAM\n */\nTwitter.prototype.stream = function(method, params, callback) {\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n\n  var base = 'stream';\n\n  if (method === 'user' || method === 'site') {\n    base = method + '_' + base;\n  }\n\n  var url = this.__buildEndpoint(method, base);\n  var request = this.request({url: url, qs: params});\n  var stream = new Streamparser();\n\n  stream.destroy = function() {\n    // FIXME: should we emit end/close on explicit destroy?\n    if ( typeof request.abort === 'function' ) {\n      request.abort(); // node v0.4.0\n    }\n    else {\n      request.socket.destroy();\n    }\n  };\n\n  request.on('response', function(response) {\n    if(response.statusCode !== 200) {\n      stream.emit('error', new Error('Status Code: ' + response.statusCode));\n    }\n    else {\n      stream.emit('response', response);\n    }\n\n    response.on('data', function(chunk) {\n      stream.receive(chunk);\n    });\n\n    response.on('error', function(error) {\n      stream.emit('error', error);\n    });\n\n    response.on('end', function() {\n      stream.emit('end', response);\n    });\n  });\n\n  request.on('error', function(error) {\n    stream.emit('error', error);\n  });\n  request.end();\n\n  if (typeof callback === 'function') {\n    callback(stream);\n  }\n  else {\n    return stream;\n  }\n};\n\n\nmodule.exports = Twitter;\n"]},"metadata":{},"sourceType":"script"}